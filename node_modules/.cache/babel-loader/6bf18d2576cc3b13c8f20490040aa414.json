{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samee\\\\OneDrive\\\\Desktop\\\\feedback-react\\\\src\\\\components\\\\FeedbackForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './UI/Card';\nimport Button from './UI/Button';\nimport './FeedbackForm.css';\nimport { useState } from 'react';\nimport RatingSelect from './RatingSelect';\nimport FeedbackContext from '../store/FeedbackContext';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedbackForm = _ref => {\n  _s();\n\n  let {\n    onSubmitHandler\n  } = _ref;\n  const {\n    addItemHandler\n  } = useContext(FeedbackContext);\n  const [text, setText] = useState('');\n  const [btnDisabled, setButtonDisabled] = useState(true);\n  const [message, setMessage] = useState('');\n  const [rating, setRating] = useState('');\n\n  const inputChangeHandler = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    console.log(value);\n\n    if (value === '') {\n      setButtonDisabled(true);\n      setMessage(null);\n    } else if (/\\d/.test(value)) {\n      //check if numbers in input\n      setMessage('Text must not include numbers!');\n      setButtonDisabled(true);\n    } else if (value.trim().length < 10) {\n      // text < 10 characters\n      setMessage('Text must be at least 10 characters long!');\n      setButtonDisabled(true);\n    } else {\n      setMessage(null);\n      setButtonDisabled(false);\n    }\n\n    setText(value);\n  };\n\n  const selectHandler = rating => {\n    console.log(rating);\n    setRating(rating);\n  }; // submitting the form\n\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newFeedback = {\n      text,\n      rating,\n      id: Math.random().toString()\n    }; //     onSubmitHandler(newFeedback);\n\n    addItemHandler(newFeedback);\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"feedback-form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How would you rate your service with us ? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratingSelect\",\n        children: /*#__PURE__*/_jsxDEV(RatingSelect, {\n          onSelect: selectHandler,\n          select: rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Write a review\",\n          onChange: inputChangeHandler,\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isDisabled: btnDisabled,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n_s(FeedbackForm, \"drIfLE8iy6NHh/WFCOX3SjZ5nT0=\");\n\n_c = FeedbackForm;\nexport default FeedbackForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"sources":["C:/Users/samee/OneDrive/Desktop/feedback-react/src/components/FeedbackForm.js"],"names":["React","Card","Button","useState","RatingSelect","FeedbackContext","useContext","FeedbackForm","onSubmitHandler","addItemHandler","text","setText","btnDisabled","setButtonDisabled","message","setMessage","rating","setRating","inputChangeHandler","target","value","console","log","test","trim","length","selectHandler","submitHandler","e","preventDefault","newFeedback","id","Math","random","toString"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from './UI/Card';\r\nimport Button from './UI/Button';\r\nimport './FeedbackForm.css';\r\nimport { useState } from 'react';\r\nimport RatingSelect from './RatingSelect';\r\nimport FeedbackContext from '../store/FeedbackContext';\r\nimport { useContext } from 'react';\r\nconst FeedbackForm = ({onSubmitHandler}) => {\r\n    const {addItemHandler , } = useContext(FeedbackContext);\r\n\r\n    const [text , setText] = useState('');\r\n    const [ btnDisabled , setButtonDisabled] = useState(true);\r\n    const [ message , setMessage] = useState('');\r\n    const [rating , setRating] = useState('');\r\n    const inputChangeHandler = ({target : {value}}) => {\r\n\r\n\r\n        \r\n    \r\n\r\nconsole.log(value);\r\nif(value === '') {\r\n    setButtonDisabled(true);\r\n    setMessage(null);\r\n}else if (/\\d/.test(value)) { //check if numbers in input\r\nsetMessage('Text must not include numbers!');\r\nsetButtonDisabled(true);\r\n}else if(value.trim().length < 10) { // text < 10 characters\r\nsetMessage('Text must be at least 10 characters long!');\r\nsetButtonDisabled(true);\r\n}else {\r\n    setMessage(null);\r\n    setButtonDisabled(false);\r\n}\r\nsetText(value);\r\n\r\n       \r\n    }\r\n    const selectHandler = (rating) => {\r\n        console.log(rating);\r\nsetRating(rating);\r\n    }\r\n\r\n    // submitting the form\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const newFeedback = {\r\n        text,\r\n        rating,\r\n        id: Math.random().toString()\r\n        }\r\n    //     onSubmitHandler(newFeedback);\r\n  \r\n    addItemHandler(newFeedback);\r\n     setText('');\r\n    }\r\n  return <Card>\r\n      <form className='feedback-form' onSubmit = {submitHandler}>\r\n      <h3>How would you rate your service with us ? </h3>\r\n      <div className='ratingSelect'>\r\n      <RatingSelect onSelect = {selectHandler} select = {rating}/>\r\n      </div>\r\n    \r\n      <div className='input-group'>\r\n          <input type=\"text\" placeholder = \"Write a review\" onChange = {inputChangeHandler} value={text} />\r\n        <Button type = \"submit\" isDisabled={btnDisabled} >Send</Button>\r\n\r\n      </div>\r\n      {message && <p className='message'>{message}</p>}\r\n      </form>\r\n   \r\n\r\n  </Card>;\r\n};\r\n\r\nexport default FeedbackForm;\r\n"]},"metadata":{},"sourceType":"module"}